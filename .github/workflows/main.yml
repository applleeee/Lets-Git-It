name: CI/CD Docker
on:
  push:
    branches: [main]
env:
  DOCKER_IMAGE: ghcr.io/applleeee/lets-git-it
  VERSION: ${{ github.sha }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: SSH into EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          run: |
            sudo docker pull ghcr.io/applleeee/lets-git-it:${{ env.VERSION }}
            sudo docker run -d --name lets-git-it -p 3000:3000 \
            -e PORT=$(grep PORT .env | xargs) \
            -e DB_TYPE=$(grep DB_TYPE .env | xargs) \
            -e DB_HOST=$(grep DB_HOST .env | xargs) \
            -e DB_PORT=$(grep DB_PORT .env | xargs) \
            -e DB_USERNAME=$(grep DB_USERNAME .env | xargs) \
            -e DB_PASSWORD=$(grep DB_PASSWORD .env | xargs) \
            -e DB_DATABASE=$(grep DB_DATABASE .env | xargs) \
            -e S3_ACCESS_KEY_ID=$(grep S3_ACCESS_KEY_ID .env | xargs) \
            -e S3_SECRET_ACEESS_KEY=$(grep S3_SECRET_ACEESS_KEY .env | xargs) \
            -e S3_BUCKET_NAME=$(grep S3_BUCKET_NAME .env | xargs) \
            -e JWT_SECRET_KEY=$(grep JWT_SECRET_KEY .env | xargs) \
            -e JWT_EXPIRES_IN=$(grep JWT_EXPIRES_IN .env | xargs) \
            -e GITHUB_CLIENT_ID=$(grep GITHUB_CLIENT_ID .env | xargs) \
            -e GITHUB_CLIENT_SECRETS=$(grep GITHUB_CLIENT_SECRETS .env | xargs) \
            -e GITHUB_ACCESS_TOKEN=$(grep GITHUB_ACCESS_TOKEN .env | xargs) \
            ghcr.io/applleeee/lets-git-it:${{ env.VERSION }}
