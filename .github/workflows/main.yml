name: CI/CD Docker
on:
    push:
        branches: [main]
env:
    DOCKER_IMAGE: ghcr.io/applleeee/Lets-Git-It
    VERSION: ${{ github.sha }}
jobs:
    build:
        name: Build
        runs-on: ubuntu-20.04
        steps:
            - name: Check out source code
              uses: actions/checkout@v2
            - run: npm ci
            - run: npm run build --if-present
            - run: npm test
            - name: Set up docker buildx
              id: buildx
              uses: docker/setup-buildx-action@v2
            - name: Cache docker layers
              uses: actions/cache@v2
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ env.VERSION }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
            - name: Login to ghcr
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}
            - name: Build and push
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  builder: ${{ steps.buildx.outputs.name }}
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
    deploy:
        needs: build
        name: Deploy
        runs-on: [self-hosted, label-go]
        steps:
            - name: Login to ghcr
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}
            - name: Docker run
              run: |
                  docker ps -q --filter "name={your image name}" | grep -q . && docker stop {your image name} && docker rm -fv {your image name}
                  docker run -d -p 3000:3000 --name cicd --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
